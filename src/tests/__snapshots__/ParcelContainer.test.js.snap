// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUpContainer  renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddParcel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <FormField>
          <FormInput
            as={[Function]}
            control={[Function]}
            label="Parcel Name"
            name="parcelName"
            onChange={[Function]}
            value=""
          />
        </FormField>,
        <FormField>
          <FormInput
            as={[Function]}
            control={[Function]}
            label="Weight (kg)"
            name="weight"
            onChange={[Function]}
            placeholder="1"
            type="number"
            value={0}
          />
        </FormField>,
        <FormField>
          <FormInput
            as={[Function]}
            control={[Function]}
            label="Price (ugx)"
            name="Price"
            onChange={[Function]}
            placeholder="Estimate delivery cost"
            readOnly={true}
            value={0}
          />
        </FormField>,
        <FormField>
          <FormInput
            as={[Function]}
            control={[Function]}
            label="Recipient"
            name="Recipient"
            onChange={[Function]}
            placeholder="Person to receive delivery"
            value=""
          />
        </FormField>,
        <FormField>
          <FormInput
            as={[Function]}
            control={[Function]}
            label="Pickup location"
            name="Pickup location"
            onChange={[Function]}
            placeholder="Pick up location"
            value=""
          />
        </FormField>,
        <FormField>
          <FormInput
            as={[Function]}
            control={[Function]}
            label="Destination"
            name="destination"
            onChange={[Function]}
            placeholder="Destination"
            value=""
          />
        </FormField>,
        <Button
          as="button"
          id="post-parcel"
          onClick={[Function]}
        >
          SAVE
        </Button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <FormInput
            as={[Function]}
            control={[Function]}
            label="Parcel Name"
            name="parcelName"
            onChange={[Function]}
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "control": [Function],
            "label": "Parcel Name",
            "name": "parcelName",
            "onChange": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <FormInput
            as={[Function]}
            control={[Function]}
            label="Weight (kg)"
            name="weight"
            onChange={[Function]}
            placeholder="1"
            type="number"
            value={0}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "control": [Function],
            "label": "Weight (kg)",
            "name": "weight",
            "onChange": [Function],
            "placeholder": "1",
            "type": "number",
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <FormInput
            as={[Function]}
            control={[Function]}
            label="Price (ugx)"
            name="Price"
            onChange={[Function]}
            placeholder="Estimate delivery cost"
            readOnly={true}
            value={0}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "control": [Function],
            "label": "Price (ugx)",
            "name": "Price",
            "onChange": [Function],
            "placeholder": "Estimate delivery cost",
            "readOnly": true,
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <FormInput
            as={[Function]}
            control={[Function]}
            label="Recipient"
            name="Recipient"
            onChange={[Function]}
            placeholder="Person to receive delivery"
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "control": [Function],
            "label": "Recipient",
            "name": "Recipient",
            "onChange": [Function],
            "placeholder": "Person to receive delivery",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <FormInput
            as={[Function]}
            control={[Function]}
            label="Pickup location"
            name="Pickup location"
            onChange={[Function]}
            placeholder="Pick up location"
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "control": [Function],
            "label": "Pickup location",
            "name": "Pickup location",
            "onChange": [Function],
            "placeholder": "Pick up location",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <FormInput
            as={[Function]}
            control={[Function]}
            label="Destination"
            name="destination"
            onChange={[Function]}
            placeholder="Destination"
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "control": [Function],
            "label": "Destination",
            "name": "destination",
            "onChange": [Function],
            "placeholder": "Destination",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": "SAVE",
          "id": "post-parcel",
          "loading": undefined,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "SAVE",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <FormInput
              as={[Function]}
              control={[Function]}
              label="Parcel Name"
              name="parcelName"
              onChange={[Function]}
              value=""
            />
          </FormField>,
          <FormField>
            <FormInput
              as={[Function]}
              control={[Function]}
              label="Weight (kg)"
              name="weight"
              onChange={[Function]}
              placeholder="1"
              type="number"
              value={0}
            />
          </FormField>,
          <FormField>
            <FormInput
              as={[Function]}
              control={[Function]}
              label="Price (ugx)"
              name="Price"
              onChange={[Function]}
              placeholder="Estimate delivery cost"
              readOnly={true}
              value={0}
            />
          </FormField>,
          <FormField>
            <FormInput
              as={[Function]}
              control={[Function]}
              label="Recipient"
              name="Recipient"
              onChange={[Function]}
              placeholder="Person to receive delivery"
              value=""
            />
          </FormField>,
          <FormField>
            <FormInput
              as={[Function]}
              control={[Function]}
              label="Pickup location"
              name="Pickup location"
              onChange={[Function]}
              placeholder="Pick up location"
              value=""
            />
          </FormField>,
          <FormField>
            <FormInput
              as={[Function]}
              control={[Function]}
              label="Destination"
              name="destination"
              onChange={[Function]}
              placeholder="Destination"
              value=""
            />
          </FormField>,
          <Button
            as="button"
            id="post-parcel"
            onClick={[Function]}
          >
            SAVE
          </Button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormInput
              as={[Function]}
              control={[Function]}
              label="Parcel Name"
              name="parcelName"
              onChange={[Function]}
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "control": [Function],
              "label": "Parcel Name",
              "name": "parcelName",
              "onChange": [Function],
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormInput
              as={[Function]}
              control={[Function]}
              label="Weight (kg)"
              name="weight"
              onChange={[Function]}
              placeholder="1"
              type="number"
              value={0}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "control": [Function],
              "label": "Weight (kg)",
              "name": "weight",
              "onChange": [Function],
              "placeholder": "1",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormInput
              as={[Function]}
              control={[Function]}
              label="Price (ugx)"
              name="Price"
              onChange={[Function]}
              placeholder="Estimate delivery cost"
              readOnly={true}
              value={0}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "control": [Function],
              "label": "Price (ugx)",
              "name": "Price",
              "onChange": [Function],
              "placeholder": "Estimate delivery cost",
              "readOnly": true,
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormInput
              as={[Function]}
              control={[Function]}
              label="Recipient"
              name="Recipient"
              onChange={[Function]}
              placeholder="Person to receive delivery"
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "control": [Function],
              "label": "Recipient",
              "name": "Recipient",
              "onChange": [Function],
              "placeholder": "Person to receive delivery",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormInput
              as={[Function]}
              control={[Function]}
              label="Pickup location"
              name="Pickup location"
              onChange={[Function]}
              placeholder="Pick up location"
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "control": [Function],
              "label": "Pickup location",
              "name": "Pickup location",
              "onChange": [Function],
              "placeholder": "Pick up location",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormInput
              as={[Function]}
              control={[Function]}
              label="Destination"
              name="destination"
              onChange={[Function]}
              placeholder="Destination"
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "control": [Function],
              "label": "Destination",
              "name": "destination",
              "onChange": [Function],
              "placeholder": "Destination",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "SAVE",
            "id": "post-parcel",
            "loading": undefined,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "SAVE",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
