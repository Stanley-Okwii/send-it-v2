// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ParcelTable />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
              Date
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Parcel
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Parcel ID
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Weight(Kgs)
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Price(Ugx)
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Recepient
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Pick up
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Destination
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Current location
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Status
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <Connect(TableContainer) />,
        <TableFooter
          as="tfoot"
          fullWidth={true}
        >
          <TableRow
            as="tr"
            cellAs="td"
          />
        </TableFooter>,
      ],
      "compact": true,
      "definition": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
              Date
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Parcel
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Parcel ID
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Weight(Kgs)
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Price(Ugx)
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Recepient
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Pick up
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Destination
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Current location
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Status
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                Date
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Parcel
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Parcel ID
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Weight(Kgs)
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Price(Ugx)
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Recepient
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Pick up
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Destination
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Current location
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Status
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Date",
              },
              "ref": null,
              "rendered": "Date",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Parcel",
              },
              "ref": null,
              "rendered": "Parcel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Parcel ID",
              },
              "ref": null,
              "rendered": "Parcel ID",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Weight(Kgs)",
              },
              "ref": null,
              "rendered": "Weight(Kgs)",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Price(Ugx)",
              },
              "ref": null,
              "rendered": "Price(Ugx)",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Recepient",
              },
              "ref": null,
              "rendered": "Recepient",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Pick up",
              },
              "ref": null,
              "rendered": "Pick up",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Destination",
              },
              "ref": null,
              "rendered": "Destination",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Current location",
              },
              "ref": null,
              "rendered": "Current location",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Status",
              },
              "ref": null,
              "rendered": "Status",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tfoot",
          "children": <TableRow
            as="tr"
            cellAs="td"
          />,
          "fullWidth": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                Date
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Parcel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Parcel ID
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Weight(Kgs)
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Price(Ugx)
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Recepient
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Pick up
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Destination
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Current location
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Status
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <Connect(TableContainer) />,
          <TableFooter
            as="tfoot"
            fullWidth={true}
          >
            <TableRow
              as="tr"
              cellAs="td"
            />
          </TableFooter>,
        ],
        "compact": true,
        "definition": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                Date
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Parcel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Parcel ID
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Weight(Kgs)
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Price(Ugx)
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Recepient
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Pick up
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Destination
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Current location
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Status
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                  Date
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Parcel
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Parcel ID
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Weight(Kgs)
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Price(Ugx)
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Recepient
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Pick up
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Destination
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Current location
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Status
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Date",
                },
                "ref": null,
                "rendered": "Date",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Parcel",
                },
                "ref": null,
                "rendered": "Parcel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Parcel ID",
                },
                "ref": null,
                "rendered": "Parcel ID",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Weight(Kgs)",
                },
                "ref": null,
                "rendered": "Weight(Kgs)",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Price(Ugx)",
                },
                "ref": null,
                "rendered": "Price(Ugx)",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Recepient",
                },
                "ref": null,
                "rendered": "Recepient",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Pick up",
                },
                "ref": null,
                "rendered": "Pick up",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Destination",
                },
                "ref": null,
                "rendered": "Destination",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Current location",
                },
                "ref": null,
                "rendered": "Current location",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Status",
                },
                "ref": null,
                "rendered": "Status",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tfoot",
            "children": <TableRow
              as="tr"
              cellAs="td"
            />,
            "fullWidth": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
